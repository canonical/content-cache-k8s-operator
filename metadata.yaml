name: content-cache-k8s
display-name: Content-cache
description: |
  A [Juju](https://juju.is/) [charm](https://juju.is/docs/olm/charmed-operators) deploying and managing
  NGINX content-cache in Kubernetes. A service providing local caches of HTTP servers and useful for building
  content delivery networks (CDN).

  A service for caching content, built on top of [Nginx](https://www.nginx.com/),
  configurable to cache any http or https web site. Tuning options include
  cache storage size, maximum request size to cache and cache validity duration.

  This service was developed to provide front-end caching for web sites run by
  Canonical's IS team, and to reduce the need for third-party CDNs by providing
  high-bandwidth access to web sites via this caching front-end. 
  
  Currently used for a number of services including [the Snap Store](https://snapcraft.io/store),
  the majority of Canonical's web properties including [ubuntu.com](https://ubuntu.com) and
  [canonical.com](https://canonical.com), and [Ubuntu Extended Security Maintenance](https://ubuntu.com/security/esm).
summary: |
  HTTP cache service useful for building CDNs.
docs: https://discourse.charmhub.io/t/content-cache-documentation-overview/3992
maintainers:
  - launchpad.net/~content-cache-charmers
assumes:
  - k8s-api
issues: https://github.com/canonical/content-cache-k8s-operator/issues
source: https://github.com/canonical/content-cache-k8s-operator

containers:
  content-cache:
    resource: content-cache-image
  nginx-prometheus-exporter:
    resource: nginx-prometheus-exporter-image

resources:
  content-cache-image:
    type: oci-image
    description: Docker image for content-cache to run
  nginx-prometheus-exporter-image:
    type: oci-image
    description: Prometheus exporter for nginx
    auto-fetch: true
    upstream-source: nginx/nginx-prometheus-exporter:0.11.0

provides:
  metrics-endpoint:
    interface: prometheus_scrape
  grafana-dashboard:
    interface: grafana_dashboard
  ingress-proxy:
    interface: ingress

requires:
  logging:
    interface: loki_push_api
    limit: 1
  ingress:
    interface: ingress
    limit: 1
